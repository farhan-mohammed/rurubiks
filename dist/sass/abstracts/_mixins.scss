@mixin flexAndCenter{
    display:flex;
    justify-content: center;
    align-items: center;
}
// Dirty Dirty code , fix later
@mixin widthSide($x){
   & .sides{
        position: absolute;
        width: 100%;
        height: 75vh;
        background: white;
        &:nth-child(1){
            background-color: $cube-red;
            &, .front{
                transform: translateZ($x/2);
            }
        }
        &:nth-child(2){
            background-color: $cube-blue;
            &, .right{
                transform: rotateY(-270deg) translateX($x/2);
                transform-origin: top right;
            }
        }
        &:nth-child(3){
            background-color: $cube-orange;
            &, .back {
                transform: translateZ(-($x/2)) rotateY(180deg);
            }
        }
        &:nth-child(4){
            background-color: $cube-green;
            &, .left{ 
                transform: rotateY(270deg) translateX(-($x/2));
                transform-origin: center left;
            }
        }
    }
}
$baseSize: 16px;
$convertBase: $baseSize;

html {
  font-size: percentage($baseSize / 16px);
}
@function convert($value, $convertUnit, $convertBase: $convertBase) {
    $currentUnit: unit($value);
    $strippedValue: $value / ($value * 0 + 1);
    @if not unitless($convertBase) {
      @if unit($convertBase) != px {
        @error "Not supported unit '#{unit($convertBase)}' as convert base!";
      }
      $convertBase: $convertBase / ($convertBase * 0 + 1);
    }
    
    @if $currentUnit == px {
      @if $convertUnit == 'em' {
        @return 0em + ($strippedValue / $convertBase);
      }
      @else if $convertUnit == '%' {
        @return percentage($strippedValue / $convertBase);
      }
    }
    @else if $currentUnit == em {
      @if $convertUnit == 'px' {
        @return 0px + ($strippedValue * $convertBase);
      }
      @else if $convertUnit == '%' {
         @return percentage($strippedValue);
      }
    }
    @else if $currentUnit == '%' {
      @if $convertUnit == 'px' {
        @return 0em + ($strippedValue * $convertBase / 100);
      }
      @else if $convertUnit == 'em' {
        @return 0em + ($strippedValue / 100);
      }
    }
    // TODO: Check for pt unit convert
    @else if $currentUnit == pt {
      @if $convertUnit == 'px' {
        @return 0px + ($strippedValue * 1.3333);
      }
      @else if $convertUnit == 'em' {
        @return 0em + ($strippedValue / 12);
      }
      @else if $convertUnit == '%' {
          @return percentage($strippedValue / 12)
      }
    }
    @error "Can't convert '#{$value}' to unit '#{$convertUnit}'!";
  }
  